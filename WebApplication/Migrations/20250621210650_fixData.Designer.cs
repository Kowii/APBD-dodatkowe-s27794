// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621210650_fixData")]
    partial class fixData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Prelegent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Prelegent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Ferdynand",
                            Nazwisko = "Kiepski"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Marian",
                            Nazwisko = "Paździoch"
                        },
                        new
                        {
                            Id = 3,
                            Imie = "Arnold",
                            Nazwisko = "Boczek"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.PrelegentWydarzenie", b =>
                {
                    b.Property<int>("WydarzenieId")
                        .HasColumnType("int")
                        .HasColumnName("Wydarzenie_ID");

                    b.Property<int>("PrelegentId")
                        .HasColumnType("int")
                        .HasColumnName("Prelegent_ID");

                    b.HasKey("WydarzenieId", "PrelegentId");

                    b.HasIndex("PrelegentId");

                    b.ToTable("Prelegent_Wydarzenie");

                    b.HasData(
                        new
                        {
                            WydarzenieId = 1,
                            PrelegentId = 1
                        },
                        new
                        {
                            WydarzenieId = 2,
                            PrelegentId = 2
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Uczestnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Uczestnik");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Imie = "Patryk",
                            Nazwisko = "Bejtman"
                        },
                        new
                        {
                            Id = 2,
                            Imie = "Anatoli",
                            Nazwisko = "Niebochód"
                        },
                        new
                        {
                            Id = 3,
                            Imie = "Yoshikage",
                            Nazwisko = "Kira"
                        },
                        new
                        {
                            Id = 4,
                            Imie = "Janusz",
                            Nazwisko = "Tracz"
                        },
                        new
                        {
                            Id = 5,
                            Imie = "Porucznik",
                            Nazwisko = "Kolombo"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.UczestnikWydarzenie", b =>
                {
                    b.Property<int>("WydarzenieId")
                        .HasColumnType("int")
                        .HasColumnName("Wydarzenie_ID");

                    b.Property<int>("UczestnikId")
                        .HasColumnType("int")
                        .HasColumnName("Uczestnik_ID");

                    b.HasKey("WydarzenieId", "UczestnikId");

                    b.HasIndex("UczestnikId");

                    b.ToTable("Uczestnik_Wydarzenie");

                    b.HasData(
                        new
                        {
                            WydarzenieId = 1,
                            UczestnikId = 1
                        },
                        new
                        {
                            WydarzenieId = 2,
                            UczestnikId = 2
                        },
                        new
                        {
                            WydarzenieId = 1,
                            UczestnikId = 3
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Wydarzenie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxLiczbaUczestnikow")
                        .HasColumnType("int")
                        .HasColumnName("max_liczba_uczestnikow");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tytul")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Wydarzenie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2025, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLiczbaUczestnikow = 50,
                            Opis = "Wielkie otwarcie parasola w Warszawie",
                            Tytul = "Otwarcie parasola"
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2025, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MaxLiczbaUczestnikow = 2,
                            Opis = "Mikrokurs łączenia w pary w Krakowie",
                            Tytul = "Kurs parowania"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.PrelegentWydarzenie", b =>
                {
                    b.HasOne("WebApplication1.Models.Prelegent", "Prelegent")
                        .WithMany("PrelegentWydarzenie")
                        .HasForeignKey("PrelegentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Wydarzenie", "Wydarzenie")
                        .WithMany()
                        .HasForeignKey("WydarzenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prelegent");

                    b.Navigation("Wydarzenie");
                });

            modelBuilder.Entity("WebApplication1.Models.UczestnikWydarzenie", b =>
                {
                    b.HasOne("WebApplication1.Models.Uczestnik", "Uczestnik")
                        .WithMany("UczestnikWydarzenie")
                        .HasForeignKey("UczestnikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Wydarzenie", "Wydarzenie")
                        .WithMany("UczestnikWydarzenie")
                        .HasForeignKey("WydarzenieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uczestnik");

                    b.Navigation("Wydarzenie");
                });

            modelBuilder.Entity("WebApplication1.Models.Prelegent", b =>
                {
                    b.Navigation("PrelegentWydarzenie");
                });

            modelBuilder.Entity("WebApplication1.Models.Uczestnik", b =>
                {
                    b.Navigation("UczestnikWydarzenie");
                });

            modelBuilder.Entity("WebApplication1.Models.Wydarzenie", b =>
                {
                    b.Navigation("UczestnikWydarzenie");
                });
#pragma warning restore 612, 618
        }
    }
}
